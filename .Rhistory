incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion'))
# Boxplot among periods
# Same result as before, more variation during the promotion
incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
# Same result as before, more variation during the promotion
incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales',subtitle='test') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
# Same result as before, more variation during the promotion
incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales',subtitle='test') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
# Same result as before, more variation during the promotion
incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
# Same result as before, more variation during the promotion
incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales (Lbs. Sold)') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Incremental Revenue
incrementalDate %>%
ggplot(aes(date, Revenue)) +
geom_line() +
scale_x_date(date_labels="%d%b",date_breaks  ="2 week") +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
geom_vline(xintercept = as.numeric(as.Date('2009-01-14')),
colour = 'red') +
geom_vline(xintercept = as.numeric(as.Date('2009-05-21')),
colour = 'red') +
xlab('Weeks') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods')
# Incremental Revenue
incrementalDate %>%
ggplot(aes(date, Revenue)) +
geom_line() +
scale_x_date(date_labels="%d%b",date_breaks  ="2 week") +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
geom_vline(xintercept = as.numeric(as.Date('2009-01-14')),
colour = 'red') +
geom_vline(xintercept = as.numeric(as.Date('2009-05-21')),
colour = 'red') +
xlab('Weeks') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods') +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Incremental Revenue
incrementalDate %>%
ggplot(aes(date, Revenue)) +
geom_line() +
scale_x_date(date_labels="%d%b",date_breaks  ="2 week") +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
geom_vline(xintercept = as.numeric(as.Date('2009-01-14')),
colour = 'red') +
geom_vline(xintercept = as.numeric(as.Date('2009-05-21')),
colour = 'red') +
xlab('Weeks') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods') +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Sales = Future sales - Past Sales') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Sales = Future sales - Past Sales') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
subtitle = element_text(size=10))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Sales = Future sales - Past Sales') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
subtitle = element_text(size=10))
?theme
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Sales = Future sales - Past Sales') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10))
?element_text
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Revenue: Future Revnue - Past Revnue') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = 'grey'))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Revenue: Future Revenue - Past Revnue') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = 'grey'))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Revenue: Future Revenue - Past Revnue') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = '#8e918f'))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Revenue: Future Revenue - Past Revenue') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = '#8e918f'))
incrementalDate %>%
ggplot(aes(date, incrementalSalesLbsSold)) +
geom_line() +
scale_x_date(date_labels="%d%b",date_breaks  ="2 week") +
theme(axis.text.x=element_text(angle=45, hjust=1)) +
geom_vline(xintercept = as.numeric(as.Date('2009-01-14')),
colour = 'red') +
geom_vline(xintercept = as.numeric(as.Date('2009-05-21')),
colour = 'red') +
xlab('Weeks') +
ylab('Incremental Sales') +
ggtitle('Incremental Sales Variation Among Periods') +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = '#8e918f'))
# Boxplot among periods
# Same result as before, more variation during the promotion
incrementalDate %>%
ggplot(aes(factor(period), incrementalSalesLbsSold)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Sales (Lbs. Sold)') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Sales: Future Lbs. Sold - Past Lbs. Sold') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = '#8e918f'))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Sales Variation Among Periods',
subtitle = 'Incremental Revenue: Future Revenue - Past Revenue') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = '#8e918f'))
# Boxplot among periods
incrementalDate %>%
ggplot(aes(factor(period), incrementalRevenue)) +
geom_boxplot() +
xlab('Period') +
ylab('Incremental Revenue') +
ggtitle('Incremental Revenue Variation Among Periods',
subtitle = 'Incremental Revenue: Future Revenue - Past Revenue') +
scale_x_discrete(labels = c('Pre-promotion','Promotion', 'Post-promotion')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
title = element_text(size=14,face="bold"),
plot.subtitle = element_text(size=10,colour = '#8e918f'))
laggedIncRevFinal <-lm(Lagged_Revenue ~ Visits +
Pageviews, data = laggedIncRevDf)
laggedIncRevDf <- laggedModelRevPrep(2)
columnNames <-c("Visits",
"Unique_Visits",
"Pageviews",
"Pages/Visit",
"Avg._Time_on_Site_(secs.)",
"Bounce_Rate","%_New_Visits",
"Inquiries")
# This function crates a dataframe with
# n lagged weeks Revenue.
#  I.e. Revenue shifts m rows.
# Then n is indexed from m+1 to nrow(df)
# The output of this function is the DF that
# is going to be used in the modelling
laggedModelRevPrep <- function(lagWeeks) {
# The lagged dataframe is created
tempDiffLagDf <- diffLag(lagWeeks,'Revenue',
qaDf) %>%
unlist() %>%
matrix( nrow=nrow(qaDf),
byrow=FALSE)
# Name of lagged revenue is creted
colnames(tempDiffLagDf) <- 'Lagged_Revenue'
# Following columns Dropped:
# Week (2008-2009), Revenue, date, period, % New Visits, Profit, Lbs. Sold
# This is done to not include any of this columns in the model
qaDf[,c(-1,-9,-13,-14,-8,-10,-11)]
tempDiffLagDf <- tempDiffLagDf %>%
cbind(qaDf[,c(-1,-9,-13,-14,-8,-10,-11)])
startIndex <- lagWeeks + 1
tempDiffLagDf <-tempDiffLagDf[startIndex:nrow(tempDiffLagDf), ]
return(tempDiffLagDf)
}
# Incremental Sales have the best fit on the 2nd week lag R2 = 0.20
# Data better to predict values in 2 weeks. This is the prediction to of
# incremental revenue
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i)
laggedModelTemp <- lm(laggedLmDf$Lagged_Revenue ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
# Now we take a closer look to the model
# Page views is the only significant variable of the model
# Beta Estimate is positive
laggedIncRevDf <- laggedModelRevPrep(2)
laggedModel <- lm(laggedIncRevDf$Lagged_Revenue ~ . ,data = laggedIncRevDf)
laggedModel %>% summary()
laggedIncRevFinal <-lm(Lagged_Revenue ~ Visits +
Pageviews, data = laggedIncRevDf)
laggedIncRevFinal  %>% summary()
lagNumber <- 3
qaModel <- visitsFinancials[,c(-1,-9,-13,-14,-10,-11)]
laggedRev <- lag(qaDf$Revenue,n = lagNumber)
laggedRev[is.na(laggedRev)] <- 0
qaModel$laggedRev <- laggedRev
startIndex <- lagNumber +1
qaModel <-qaModel[startIndex:nrow(qaModel), ]
qaModel<- scale(qaModel) %>% as.data.frame()
lm(formula = qaModel$laggedRev ~ Visits + Unique_Visits + `Pages/Visit`,
data = qaModel) %>% summary()
qaLagRevBest <- lm(formula = laggedRev ~ Visits + Pageviews + pagesPerVisit +
avgTimeOnSite + Bounce_Rate + Inquiries,
data = qaModel)
colnames(qaModel)[c(4,5,7)] <- c('pagesPerVisit', 'avgTimeOnSite','percentNewVisits' )
qaLagRevBest <- lm(formula = laggedRev ~ Visits + Pageviews + pagesPerVisit +
avgTimeOnSite + Bounce_Rate + Inquiries,
data = qaModel)
qaLagRevBest %>% summary()
stepAIC(laggedModel, direction = 'backward')
# Variable selection through stepwise regression
library(MASS)
stepAIC(laggedModel, direction = 'backward')
laggedIncRevFinal <-lm(Lagged_Revenue ~ Visits +
Pageviews + `Avg. Time on Site (secs.)`, data = laggedIncRevDf)
laggedIncRevFinal  %>% summary()
laggedIncRevFinal <-lm(Lagged_Revenue ~ Visits +
Pageviews, data = laggedIncRevDf)
laggedIncRevFinal  %>% summary()
??moving
require(smooth)
install.packages("Mcomp")
laggedModelRevPrep <- function(lagWeeks,columnName) {
# The lagged dataframe is created
tempDiffLagDf <- diffLag(lagWeeks,ccolumnName,
qaDf) %>%
unlist() %>%
matrix( nrow=nrow(qaDf),
byrow=FALSE)
# Name of lagged revenue is creted
colnames(tempDiffLagDf) <- paste('Lagged_',columnName)
# Following columns Dropped:
# Week (2008-2009), Revenue, date, period, % New Visits, Profit, Lbs. Sold
# This is done to not include any of this columns in the model
qaDf[,c(-1,-9,-13,-14,-8,-10,-11)]
tempDiffLagDf <- tempDiffLagDf %>%
cbind(qaDf[,c(-1,-9,-13,-14,-8,-10,-11)])
startIndex <- lagWeeks + 1
tempDiffLagDf <-tempDiffLagDf[startIndex:nrow(tempDiffLagDf), ]
return(tempDiffLagDf)
}
colnames(qaDf)
laggedModelRevPrep(1,"Lbs. Sold")
laggedModelRevPrep <- function(lagWeeks,columnName) {
# The lagged dataframe is created
tempDiffLagDf <- diffLag(lagWeeks,columnName,
qaDf) %>%
unlist() %>%
matrix( nrow=nrow(qaDf),
byrow=FALSE)
# Name of lagged revenue is creted
colnames(tempDiffLagDf) <- paste('Lagged_',columnName)
# Following columns Dropped:
# Week (2008-2009), Revenue, date, period, % New Visits, Profit, Lbs. Sold
# This is done to not include any of this columns in the model
qaDf[,c(-1,-9,-13,-14,-8,-10,-11)]
tempDiffLagDf <- tempDiffLagDf %>%
cbind(qaDf[,c(-1,-9,-13,-14,-8,-10,-11)])
startIndex <- lagWeeks + 1
tempDiffLagDf <-tempDiffLagDf[startIndex:nrow(tempDiffLagDf), ]
return(tempDiffLagDf)
}
laggedModelRevPrep(1,"Lbs. Sold")
laggedModelRevPrep(1,"Lbs. Sold")
laggedModelRevPrep(1,"Lbs. Sold")
laggedModelRevPrep(1,"Lbs. Sold") %>% colnames()
laggedIncLbsSold <- laggedModelRevPrep(1,"Lbs. Sold") %>% colnames()
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i)
laggedModelTemp <- lm(laggedLmDf$Lagged_Revenue ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i,"Revenue")
laggedModelTemp <- lm(laggedLmDf$Lagged_Revenue ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
laggedModelRevPrep(i,"Revenue") %>% colnames()
laggedModelRevPrep <- function(lagWeeks,columnName) {
# The lagged dataframe is created
tempDiffLagDf <- diffLag(lagWeeks,columnName,
qaDf) %>%
unlist() %>%
matrix( nrow=nrow(qaDf),
byrow=FALSE)
# Name of lagged revenue is creted
colnames(tempDiffLagDf) <- paste('Lagged_',columnName,sep = '')
# Following columns Dropped:
# Week (2008-2009), Revenue, date, period, % New Visits, Profit, Lbs. Sold
# This is done to not include any of this columns in the model
qaDf[,c(-1,-9,-13,-14,-8,-10,-11)]
tempDiffLagDf <- tempDiffLagDf %>%
cbind(qaDf[,c(-1,-9,-13,-14,-8,-10,-11)])
startIndex <- lagWeeks + 1
tempDiffLagDf <-tempDiffLagDf[startIndex:nrow(tempDiffLagDf), ]
return(tempDiffLagDf)
}
laggedModelRevPrep(i,"Revenue") %>% colnames()
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i,"Revenue")
laggedModelTemp <- lm(laggedLmDf$Lagged_Revenue ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
laggedLmDf <- laggedModelRevPrep(i,"Lbs. Sold")
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i,"Lbs. Sold")
laggedModelTemp <- lm(laggedLmDf$Lagged_Revenue ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i,"Lbs. Sold")
laggedModelTemp <- lm(laggedLmDf[,1] ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
for (i in 1:10){
laggedLmDf <- laggedModelRevPrep(i,"Lbs. Sold")
laggedModelTemp <- lm(laggedLmDf$`Lagged_Lbs. Sold` ~ . ,data = laggedLmDf) %>% summary()
paste('Lag:',1,' --- ', print(laggedModelTemp$r.squared),'\n')
}
laggedIncLbsSold <- laggedModelRevPrep(1,"Lbs. Sold") %>% colnames()
laggedIncLbsSold <- laggedModelRevPrep(1,"Lbs. Sold")
laggedIncLbsSold <- laggedModelRevPrep(4,"Lbs. Sold")
laggedModel <- lm(`Lagged_Lbs. Sold` ~ . , data = laggedIncLbsSold)
# Variable selection through stepwise regression
library(MASS)
stepAIC(laggedModel, direction = 'backward')
lm(formula = `Lagged_Lbs. Sold` ~ Visits + `Unique Visits` +
`Pages/Visit` + `Bounce Rate` + Inquiries, data = laggedIncLbsSold) %>% colnames()
lm(formula = `Lagged_Lbs. Sold` ~ Visits + `Unique Visits` +
`Pages/Visit` + `Bounce Rate` + Inquiries, data = laggedIncLbsSold) %>% summary()
laggedIncRevDf <- laggedModelRevPrep(2)
laggedIncRevDf <- laggedModelRevPrep(2, "Revenue")
laggedModel <- lm(laggedIncRevDf$Lagged_Revenue ~ . ,data = laggedIncRevDf)
laggedModel %>% summary()
# Variable selection through stepwise regression
library(MASS)
stepAIC(laggedModel, direction = 'backward')
laggedIncRevFinal <-lm(Lagged_Revenue ~ Visits +
Pageviews, data = laggedIncRevDf)
laggedIncRevFinal  %>% summary()
laggedIncRevDf <- laggedModelRevPrep(2, "Revenue")
laggedModel <- lm(laggedIncRevDf$Lagged_Revenue ~ . ,data = laggedIncRevDf)
laggedModel %>% summary()
?LEAD
?lead
