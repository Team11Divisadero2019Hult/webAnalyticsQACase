visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(.))
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(mean))
visitsFinancials %>%
# group_by(campaign) %>%
summarize(mean = mean(mean))
summarize(mean = mean
# visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean)
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean)
visitsFinancials %>%
group_by(campaign, mean)
visitsFinancials %>%
group_by(campaign)
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(),
median = median(Revenue))
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(Revenue),
median = median(Revenue))
customSummary(Visits)
customSummary <- function(variable){
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(),
median = median(variable),
standardDev = sd(variable),
Max = max(variable),
Min = min(variable))
}
customSummary(Visits)
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(Revenue),
median = median(Revenue))
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(variable),
median = median(variable),
standardDev = sd(variable),
Max = max(variable),
Min = min(variable))
customSummary <- function(variable){
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(variable),
median = median(variable),
standardDev = sd(variable),
Max = max(variable),
Min = min(variable))
}
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(Revenue),
median = median(Revenue))
customSummary(`Unique Visits`)
customSummary(Unique Visits)
str_replace(colnames(visitsFinancials),' ', '_')
str_replace_all(colnames(visitsFinancials),' ', '_')
colnames(visitsFinancials) <- str_replace_all(colnames(visitsFinancials),' ', '_')
visitsFinancials
customSummary(Visits)
customSummary(UniqueVisits)
customSummary <- function(variable){
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(variable),
median = median(variable),
standardDev = sd(variable),
Max = max(variable),
Min = min(variable))
}
visitsFinancials
customSummary(Visits)
customSummary(Visits)
visitsFinancials %>%
group_by(campaign) %>%
summarize(mean = mean(Revenue),
median = median(Revenue))
customSummary(eval(Visits))
customSummary(eval('Visits'))
visitsFinancials %>% ggplot(aes(x = campaign,y = Revenue)) +
geom_bar(stat = 'identity',fun.y = 'mean')
summary
visitsFinancials %>% ggplot(aes(x = campaign,y = Revenue)) +
geom_bar(stat = 'summary',fun.y = 'mean')
?identity
visitsFinancials %>% ggplot(aes(x = campaign,y = Lbs._Sold)) +
geom_bar(stat = 'summary',fun.y = 'mean')
visitsFinancials %>% ggplot(aes(x = campaign,y = Profit)) +
geom_bar(stat = 'summary',fun.y = 'mean')
visitsFinancials %>% ggplot(aes(x = campaign,y = Lbs._Sold)) +
geom_bar(stat = 'summary',fun.y = 'mean')
visitsFinancials %>% ggplot(aes(x = campaign,y = Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
visitsFinancials %>% ggplot(aes(x = campaign,y = Unique_Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
install.packages("ggpubr")
campRev <-visitsFinancials %>% ggplot(aes(x = campaign,y = Revenue)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campProf <- visitsFinancials %>% ggplot(aes(x = campaign,y = Profit)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campLbs <- visitsFinancials %>% ggplot(aes(x = campaign,y = Lbs._Sold)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campVisits <- visitsFinancials %>% ggplot(aes(x = campaign,y = Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campUniqueVisits<- visitsFinancials %>% ggplot(aes(x = campaign,y = Unique_Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
library(ggpubr)
ggarrange(campVisits)
ggarrange(campVisits,campUniqueVisits)
ggarrange(campVisits,campUniqueVisits,campLbs)
ggarrange(campVisits,campUniqueVisits,campLbs,campProf,campRev)
visitsFinancials %>% mutate(Revenue - Profit)
visitsFinancials %>% mutate(cost = Revenue - Profit)
visitsFinancials <- visitsFinancials %>% mutate(cost = Revenue - Profit)
View(visitsFinancials)
480728 - 118683
visitsFinancials %>% ggplot(aes(y = cost, x = date)) +
geom_line()
visitsFinancials %>%
mutate(unitCost = cost/Lbs._Sold)
visitsFinancials <- visitsFinancials %>%
mutate(unitCost = cost/Lbs._Sold)
visitsFinancials %>% ggplot(aes(y = unitCost, x = date)) +
geom_line()
colnames(visitsFinancials)
lm(visitsFinancials$Profit ~ visitsFinancials$Revenue + visitsFinancials$cost , data = visitsFinancials)
lm(visitsFinancials$Profit ~ visitsFinancials$Revenue + visitsFinancials$cost ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$Revenue ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$cost ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$unitCost ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$cost ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$campaign ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Revenue ~ visitsFinancials$campaign ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$cost ~ visitsFinancials$campaign ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$Revenue ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$cost ,
data = visitsFinancials) %>% summary()
lm(visitsFinancials$Profit ~ visitsFinancials$unitCost ,
data = visitsFinancials) %>% summary()
ggplot(visitsFinancials, aes(x = factor(campaign), y = cost)) +
geom_boxplot() +
xlab('Time Period Segmented by marketing promotion') +
scale_x_discrete(labels = c('Initial','Pre-promotion','Promotion', 'Post-promotion'))
ggplot(visitsFinancials, aes(x = factor(campaign), y = Revenue)) +
geom_boxplot() +
xlab('Time Period Segmented by marketing promotion') +
scale_x_discrete(labels = c('Initial','Pre-promotion','Promotion', 'Post-promotion'))
cor(visitsFinancials$cost, visitsFinancials$Profit, visitsFinancials$date)
cor(visitsFinancials$cost, visitsFinancials$Profit, visitsFinancials$campaign)
cor(visitsFinancials$cost, visitsFinancials$Profit)
cor(visitsFinancials$cost, visitsFinancials$campaign)
cor(visitsFinancials$cost, visitsFinancials$date)
cor(visitsFinancials$cost, as.numeric(visitsFinancials$date))
cor(visitsFinancials$Revenue, visitsFinancials$campaign)
cor(visitsFinancials$Revenue, visitsFinancials$campaign, method = 'spearman')
cor(visitsFinancials$cost, visitsFinancials$campaign, method = 'spearman')
cor(visitsFinancials$Revenue, visitsFinancials$Profit)
cor(visitsFinancials$cost, visitsFinancials$Profit)
lm( visitsFinancials$Profit ~ visitsFinancials$cost + visitsFinancials$Revenue)
cor(visitsFinancials$cost, visitsFinancials$Revenue)
ggplot(visitsFinancials, aes(x = factor(campaign), y = Revenue)) +
geom_boxplot() +
xlab('Time Period Segmented by marketing promotion') +
scale_x_discrete(labels = c('Initial','Pre-promotion','Promotion', 'Post-pr
visitsFinancials <- visitsFinancials %>%
mutate(price = Revenue/Lbs._Sold)
visitsFinancials <- visitsFinancials %>%
mutate(price = Revenue/Lbs._Sold)
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line()
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
cor(visitsFinancials$price, visitsFinancials$Profit)
cor(visitsFinancials$price, visitsFinancials$Revenue)
cor(visitsFinancials$Lbs._Sold, visitsFinancials$Revenue)
# Price Plot
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
visitsWeek$campaign <- 1
visitsWeek$campaign[15:35] <- 2
visitsWeek$campaign[36:52] <- 3
visitsWeek$campaign[53:nrow(visitsWeek)] <- 4
# financials
# No need to massage anything
str(financials)
# Left Join financials with visits
visitsFinancials <- left_join(visitsWeek, financials, by = "Week (2008-2009)")
str(visitsFinancials)
colnames(visitsFinancials) <- str_replace_all(colnames(visitsFinancials),' ', '_')
colnames(visitsFinancials)
visitsFinancials$date <- paste(str_extract(visitsFinancials$`Week_(2008-2009)`,
pattern = '\\w{3} \\d{1,2} ') ,2008) %>%
parse_date_time(orders = 'mdy')
visitsFinancials$date[33:nrow(visitsFinancials)] <- paste(str_extract(visitsFinancials$`Week (2008-2009)`[33:nrow(visitsFinancials)],
pattern = '\\w{3} \\d{1,2} ') ,2009) %>%
parse_date_time(orders = 'mdy')
visitsFinancials$date[33:nrow(visitsFinancials)] <- paste(str_extract(visitsFinancials$`Week (2008-2009)`[33:nrow(visitsFinancials)],
pattern = '\\w{3} \\d{1,2} ') ,2009) %>%
parse_date_time(orders = 'mdy')
# Price Plot
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
# Price
visitsFinancials <- visitsFinancials %>%
mutate(price = Revenue/Lbs._Sold)
# Price Plot
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
# Cost Column
visitsFinancials <- visitsFinancials %>%
mutate(cost = Revenue - Profit)
# Unit Cost Columm
visitsFinancials <- visitsFinancials %>%
mutate(unitCost = cost/Lbs._Sold)
# Price
visitsFinancials <- visitsFinancials %>%
mutate(price = Revenue/Lbs._Sold)
# Price Plot
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
library(readxl)
library(magrittr)
library(dplyr)
library(ggplot2)
library(scales)
library(lubridate)
library(stringr)
library(plotly)
# setwd('/home/diego/bamodA/R/cases/webAnalyticsQACase/')
visitsWeek <- read_excel("webAnalyticsCase.xls",
sheet = "Weekly Visits")
financials <- read_excel('webAnalyticsCase.xls',
sheet = 'Financials')
lbSold <- read_excel("webAnalyticsCase.xls",
sheet = "Lbs. Sold")
visitsDaily <- read_excel("webAnalyticsCase.xls",
sheet = "Daily Visits")
# Case Info -----------------------------------------------------
# Goals of website:
# Drive new Sales
# Make product and contact information available
# Give or add legitimacy to their brand
# Asian Market was viewed as important because the wanted to shift towards pacific Rim. <--
# QA commissioned a professionally produced brochure providing an overview of the
# company’s products and services and sent it to potential customers in mid-December 2008
# General Questions -------------------------------------------------------
# How many people visit the website? How do they come to the website?
#   • Is the website generating interest, and does this interest yield actual sales?
#   • Do traditional promotions drive web traffic, and in turn drive incremental sales?
#   • How can visits to the website best be modeled?
#   • Where and how should QA advertise?
# Goal --------------------------------------------------------------------
# Examin the value of QA's website by combining website metrics, financial measures, and amount of merchandise sold.
# One Focus: Analysis for senior management regarding the effectiveness of QA's promotional effort
# Structure ---------------------------------------------------------------
# Two parts: 1. Executive summary with recommendations 2. Responses to the Analysisis section
# They want to expand, increase profit margins
# It is necessary to check their topline and bottomline
# Question: How do we improve their topline while cutting costs?
# Topline
# 1. How the different stages (initial,prepromo,promo,post) impacted the profit margins?
# Bottomline
# 1. Fixed cost and variable costs
# 2. How to minimize costs (Find weights)
# Data Massaging ----------------------------------------------------------
# Weekly Visits
str(visitsWeek)
# Week Shouldn't be a factor
# This column can be better usef if new column is created with pre, during, post promotion
# Rest of columns need to be numeric
# Initial period Creation
# Initial Period: May 25 - Aug 30 (First 14 Rows)
# Pre Promotion: Aug 31 - Jan 24 [15:35]
# Promotion: Jan 25 - May 23 [36:52]
# Post Promotion: May 24 - Aug 29 [53:]
visitsWeek$campaign <- 1
visitsWeek$campaign[15:35] <- 2
visitsWeek$campaign[36:52] <- 3
visitsWeek$campaign[53:nrow(visitsWeek)] <- 4
# financials
# No need to massage anything
str(financials)
# Left Join financials with visits
visitsFinancials <- left_join(visitsWeek, financials, by = "Week (2008-2009)")
str(visitsFinancials)
colnames(visitsFinancials) <- str_replace_all(colnames(visitsFinancials),' ', '_')
colnames(visitsFinancials)
# Creation of date column with proper format (useful for plots that have time in the X axis)
# Example: paste(str_extract(visitsFinancials$`Week (2008-2009)`, pattern = '\\w{3} \\d{1,2} ') ,2008) %>% parse_date_time(orders = 'mdy')
visitsFinancials$date <- paste(str_extract(visitsFinancials$`Week_(2008-2009)`,
pattern = '\\w{3} \\d{1,2} ') ,2008) %>%
parse_date_time(orders = 'mdy')
visitsFinancials$date[33:nrow(visitsFinancials)] <- paste(str_extract(visitsFinancials$`Week (2008-2009)`[33:nrow(visitsFinancials)],
pattern = '\\w{3} \\d{1,2} ') ,2009) %>%
parse_date_time(orders = 'mdy')
colnames(visitsFinancials)
campaign
# It seems that is generating attention, it seems that this attention is due to the
# Promotion
ggplot(visitsFinancials, aes(x = factor(campaign), y = Visits)) +
geom_boxplot() +
xlab('Time Period Segmented by marketing promotion') +
scale_x_discrete(labels = c('Initial','Pre-promotion','Promotion', 'Post-promotion'))
# The promotion did not generated any Revenue
# Question: It was because of a bad promotion or the company was doing bad?
ggplotly(ggplot(visitsFinancials, aes(x = factor(campaign), y = Revenue)) +
geom_boxplot() +
xlab('Time Period Segmented by marketing promotion') +
scale_x_discrete(labels = c('Initial','Pre-promotion','Promotion', 'Post-promotion')) +
scale_y_continuous(label = dollar_format()  ))
library(readxl)
library(magrittr)
library(dplyr)
library(ggplot2)
library(scales)
library(lubridate)
library(stringr)
library(plotly)
# setwd('/home/diego/bamodA/R/cases/webAnalyticsQACase/')
visitsWeek <- read_excel("webAnalyticsCase.xls",
sheet = "Weekly Visits")
financials <- read_excel('webAnalyticsCase.xls',
sheet = 'Financials')
lbSold <- read_excel("webAnalyticsCase.xls",
sheet = "Lbs. Sold")
visitsDaily <- read_excel("webAnalyticsCase.xls",
sheet = "Daily Visits")
# Case Info -----------------------------------------------------
# Goals of website:
# Drive new Sales
# Make product and contact information available
# Give or add legitimacy to their brand
# Asian Market was viewed as important because the wanted to shift towards pacific Rim. <--
# QA commissioned a professionally produced brochure providing an overview of the
# company’s products and services and sent it to potential customers in mid-December 2008
# General Questions -------------------------------------------------------
# How many people visit the website? How do they come to the website?
#   • Is the website generating interest, and does this interest yield actual sales?
#   • Do traditional promotions drive web traffic, and in turn drive incremental sales?
#   • How can visits to the website best be modeled?
#   • Where and how should QA advertise?
# Goal --------------------------------------------------------------------
# Examin the value of QA's website by combining website metrics, financial measures, and amount of merchandise sold.
# One Focus: Analysis for senior management regarding the effectiveness of QA's promotional effort
# Structure ---------------------------------------------------------------
# Two parts: 1. Executive summary with recommendations 2. Responses to the Analysisis section
# They want to expand, increase profit margins
# It is necessary to check their topline and bottomline
# Question: How do we improve their topline while cutting costs?
# Topline
# 1. How the different stages (initial,prepromo,promo,post) impacted the profit margins?
# Bottomline
# 1. Fixed cost and variable costs
# 2. How to minimize costs (Find weights)
# Data Massaging ----------------------------------------------------------
# Weekly Visits
str(visitsWeek)
# Week Shouldn't be a factor
# This column can be better usef if new column is created with pre, during, post promotion
# Rest of columns need to be numeric
# Initial period Creation
# Initial Period: May 25 - Aug 30 (First 14 Rows)
# Pre Promotion: Aug 31 - Jan 24 [15:35]
# Promotion: Jan 25 - May 23 [36:52]
# Post Promotion: May 24 - Aug 29 [53:]
visitsWeek$campaign <- 1
visitsWeek$campaign[15:35] <- 2
visitsWeek$campaign[36:52] <- 3
visitsWeek$campaign[53:nrow(visitsWeek)] <- 4
# financials
# No need to massage anything
str(financials)
# Left Join financials with visits
visitsFinancials <- left_join(visitsWeek, financials, by = "Week (2008-2009)")
str(visitsFinancials)
colnames(visitsFinancials) <- str_replace_all(colnames(visitsFinancials),' ', '_')
colnames(visitsFinancials)
visitsFinancials$date <- paste(str_extract(visitsFinancials$`Week_(2008-2009)`,
pattern = '\\w{3} \\d{1,2} ') ,2008) %>%
parse_date_time(orders = 'mdy')
visitsFinancials$date[33:nrow(visitsFinancials)] <- paste(str_extract(visitsFinancials$`Week (2008-2009)`[33:nrow(visitsFinancials)],
pattern = '\\w{3} \\d{1,2} ') ,2009) %>%
parse_date_time(orders = 'mdy')
visitsFinancials$date[33:nrow(visitsFinancials)] <- paste(str_extract(visitsFinancials$`Week_(2008-2009)`[33:nrow(visitsFinancials)],
pattern = '\\w{3} \\d{1,2} ') ,2009) %>%
parse_date_time(orders = 'mdy')
# Price Plot
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
# Cost Column
visitsFinancials <- visitsFinancials %>%
mutate(cost = Revenue - Profit)
# Unit Cost Columm
visitsFinancials <- visitsFinancials %>%
mutate(unitCost = cost/Lbs._Sold)
# Price
visitsFinancials <- visitsFinancials %>%
mutate(price = Revenue/Lbs._Sold)
# Price Plot
visitsFinancials %>% ggplot(aes(y = price, x = date)) +
geom_line() +
geom_vline(xintercept = as.numeric(visitsFinancials$date[15]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[36]),
colour = 'red') +
geom_vline(xintercept = as.numeric(visitsFinancials$date[53]),
colour = 'red')
lag(visitsFinancials$price, -1)
stats::lag(visitsFinancials$price, -1)
?lag
install.packages("quantmod")
install.packages("tfplot")
tfplot::percentChange(visitsFinancials$price)
library(quantmod)
Delt(visitsFinancials$price)
campRev <-visitsFinancials %>% ggplot(aes(x = campaign,y = Revenue)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campProf <- visitsFinancials %>% ggplot(aes(x = campaign,y = Profit)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campLbs <- visitsFinancials %>% ggplot(aes(x = campaign,y = Lbs._Sold)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campVisits <- visitsFinancials %>% ggplot(aes(x = campaign,y = Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campUniqueVisits<- visitsFinancials %>% ggplot(aes(x = campaign,y = Unique_Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
campUniqueVisits<- visitsFinancials %>% ggplot(aes(x = campaign,y = Unique_Visits)) +
geom_bar(stat = 'summary',fun.y = 'mean')
library(ggpubr)
ggarrange(campVisits,campUniqueVisits,campLbs,campProf,campRev)
cor(visitsFinancials$price, visitsFinancials$Revenue)
cor(visitsFinancials$Lbs._Sold, visitsFinancials$Revenue)
campCost<- visitsFinancials %>% ggplot(aes(x = campaign,y = cost)) +
geom_bar(stat = 'summary',fun.y = 'mean')
ggarrange(campVisits,campUniqueVisits,campLbs,campProf,campRev, campCost)
visitsFinancials %>% ggplot(aes(y = unitCost, x = date)) +
geom_line()
lm(visitsFinancials$Profit ~ visitsFinancials$unitCost ,
data = visitsFinancials) %>% summary()
lm( visitsFinancials$Profit ~ visitsFinancials$cost + visitsFinancials$Revenue)
# Unit Cost don't affect profit
lm(visitsFinancials$Profit ~ visitsFinancials$unitCost ,
data = visitsFinancials) %>% summary()
campCost<- visitsFinancials %>% ggplot(aes(x = campaign,y = unitCost)) +
geom_bar(stat = 'summary',fun.y = 'mean')
library(ggpubr)
ggarrange(campVisits,campUniqueVisits,campLbs,campProf,campRev, campCost)
9+3+2+1+1
16/6
9+3+2+1+2
17/6
17-6
11/2
unique = [1,1,1,1,1,1]
unique = c(1,1,1,1,1,1)
total = c(9,3,2,1,1,2)
unique - total
total - unique
